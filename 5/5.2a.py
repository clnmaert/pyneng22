# Task 5.2a
'''Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети, надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):

10.0.1.0/24
190.1.0.0/16
Пример адреса хоста:

10.0.1.1/24 - хост из сети 10.0.1.0/24
10.0.5.195/28 - хост из сети 10.0.5.192/28
Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000
Проверить работу скрипта на разных комбинациях хост/маска, например: 10.0.5.195/28, 10.0.1.1/24

Подсказка:

Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля. То есть, например, адрес хоста 10.1.1.195/28 в двоичном формате будет bin_ip = "00001010000000010000000111000011".

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4): 00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.'''

ip = input('Сестра, несите тазик. Тазик эвтаназик вида/24: ')
mask = int(ip[(ip.find('/') + 1):], 10)
mask_bin = '1' * mask + '0' * (32 - mask)
ip = ip[:ip.find('/')]
ip_list = list(ip.split('.'))
ip_bin = ip.replace('.', '')
ip_bin = (bin(int(ip_bin, 10)))[2:]
network_bin = ip_bin[:mask] + '0' * (32 - mask)
print(f'Network:\n'
      f'{ip_list[0]:<10}{ip_list[1]:<10}{ip_list[2]:<10}{ip_list[3]:<10}\n'
      f'{(ip_bin[:8]):08}  {ip_bin[8:16]:08}  {ip_bin[16:24]:08}  {ip_bin[24:]:08}\n\n'
      f'Mask:\n'
      f'/{mask}\n'
      f'{int((mask_bin[:8]), 2):<10}  {int((mask_bin[8:16]), 2):<10}  {int((mask_bin[16:24]), 2):<10}  {int((mask_bin[24:]), 2):<10}\n'
      f'{mask_bin[:8]:08}  {mask_bin[8:16]:08}  {mask_bin[16:24]:08}  {mask_bin[24:]:08}')
